# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude: [build/**]
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

linter:
  rules:

    # General rules
    - avoid_bool_literals_in_conditional_expressions
    - avoid_dynamic_calls
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_setters_without_getters
    - avoid_types_as_parameter_names
    - avoid_web_libraries_in_flutter
    - discarded_futures
    - literal_only_boolean_expressions
    - no_leading_underscores_for_local_identifiers
    - prefer_inlined_adds
    - prefer_is_empty
    - prefer_null_aware_operators
    - require_trailing_commas
    - type_init_formals
    - unnecessary_brace_in_string_interps
    - unnecessary_null_checks
    - use_named_constants
    - use_super_parameters

    # Flutter soecific
    - avoid_unnecessary_containers
    - prefer_const_constructors_in_immutables
    - prefer_const_literals_to_create_immutables
    - prefer_expression_function_bodies
    - prefer_single_quotes
    - sized_box_for_whitespace
    - use_build_context_synchronously
    - use_key_in_widget_constructors

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
